import os
import telebot
from telebot import types
import time
import threading
from flask import Flask

# ================== –û–ë–ú–ê–ù–ö–ê –î–õ–Ø RENDER ==================
app = Flask(__name__)

@app.route('/')
def home():
    return "ü§ñ Telegram Bot is running!"

def run_flask():
    app.run(host='0.0.0.0', port=5000, debug=False)

flask_thread = threading.Thread(target=run_flask)
flask_thread.daemon = True
flask_thread.start()
# =======================================================

BOT_TOKEN = os.environ.get('BOT_TOKEN')

if not BOT_TOKEN:
    print("‚ùå –û–®–ò–ë–ö–ê: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    exit(1)

print("‚úÖ BOT_TOKEN –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
bot = telebot.TeleBot(BOT_TOKEN)

agents = [
    {"name": "@SamoletPlus113", "status": "—Å–≤–æ–±–æ–¥–µ–Ω"},
    {"name": "@qwils", "status": "—Å–≤–æ–±–æ–¥–µ–Ω"},
    {"name": "–î–µ–Ω–∏—Å", "phone": "+7 963 891 5555", "status": "—Å–≤–æ–±–æ–¥–µ–Ω"}
]

current_agent_index = 0

@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_agent = types.KeyboardButton("üìû –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä –∞–≥–µ–Ω—Ç–∞")
    markup.add(button_agent)
    
    welcome_text = """
ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏!

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ü–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä –∞–≥–µ–Ω—Ç–∞¬ª, —á—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º.
    """
    bot.send_message(message.chat.id, welcome_text, reply_markup=markup)
    print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")

@bot.message_handler(func=lambda message: message.text == "üìû –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä –∞–≥–µ–Ω—Ç–∞")
def send_agent_number(message):
    global current_agent_index
    agent = agents[current_agent_index]
    
    agent_info = f"""
‚úÖ –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞–≥–µ–Ω—Ç:

üë®‚Äçüíº –ò–º—è: {agent['name']}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: {agent['phone']}
üü¢ –°—Ç–∞—Ç—É—Å: {agent['status']}
    """
    
    bot.send_message(message.chat.id, agent_info)
    current_agent_index = (current_agent_index + 1) % len(agents)
    print(f"‚úÖ –í—ã–¥–∞–Ω –∞–≥–µ–Ω—Ç {agent['name']} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.chat.id}")

@bot.message_handler(func=lambda message: True)
def handle_other_messages(message):
    bot.send_message(
        message.chat.id, 
        "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –∞–≥–µ–Ω—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá",
        reply_markup=types.ReplyKeyboardMarkup(resize_keyboard=True).add(
            types.KeyboardButton("üìû –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä –∞–≥–µ–Ω—Ç–∞")
        )
    )

if __name__ == '__main__':
    print("=" * 50)
    print("üöÄ –ë–û–¢ –ó–ê–ü–£–°–ö–ê–ï–¢–°–Ø –ù–ê RENDER")
    print("=" * 50)
    print("‚úÖ Flask —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–µ")
    print("‚úÖ –ë–æ—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç —Ä–∞–±–æ—Ç—É...")
    
    try:
        bot.infinity_polling(timeout=60, long_polling_timeout=60)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print("‚ôªÔ∏è –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥...")
        time.sleep(10)
